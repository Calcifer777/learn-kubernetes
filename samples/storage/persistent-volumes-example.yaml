
apiVersion: v1
kind: Namespace
metadata:
  name: storage-tutorial

---

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: cache-volumes
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: vol-1
spec:
  capacity:
    storage: 1Mi
  accessModes:
    - ReadWriteOnce
  storageClassName: cache-volumes
  hostPath:
    path: /mnt/k8s/volumes/vol-1/
    type: DirectoryOrCreate

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sample-claim
  namespace: storage-tutorial
spec:
  storageClassName: cache-volumes
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Mi
    
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: volumes-tutorial-deploy
  namespace: storage-tutorial
spec:
  replicas: 1
  selector:
    matchLabels:
      app: storage-tutorial
  template:
    metadata:
      name: storage-tutorial-pod
      labels:
        app: storage-tutorial
    spec:
      containers:
        - name: boxy
          image: alpine:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 50m
              memory: 50Mi
            limits:
              cpu: 50m
              memory: 50Mi
          command: ["sh", "-c"]
          args:
            - echo hello world from ${POD_NAME} >> /mnt/cache/log.txt \
              && sleep 3600
          volumeMounts:
            - mountPath: "/mnt/cache"
              name: cache
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
      volumes:
        - name: cache
          persistentVolumeClaim:
              claimName: sample-claim
